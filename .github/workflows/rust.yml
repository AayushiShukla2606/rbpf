name: Rust

on:
  push:
    branches:  [main]
  pull_request:
    branches:  [main]


jobs:
  build:
    name : test
    strategy:
      fail-fast: false
      matrix:
       rust : [stable , beta , nightly]
       os : [ ubuntu-latest, macos-latest, windows-latest] 
       include: 
           - os: ubuntu-latest
             rust: nightly
             allow_failure: true
           - os : macOS-latest
             rust: nightly
             allow_failure: true
           - os : windows-latest
             rust: nightly
             allow_failure: true
    runs-on: ${{ matrix.os }}
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v2
      - name : Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-registry-
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-registry-
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-registry-
      - run : |
            cargo fmt --all -- --check
            cargo clippy --all --tests -- --deny=warnings
            set RUSTFLAGS="-D warnings"
            cargo build --verbose
            cargo test --verbose
      - name: before deploy
        run: |
            cargo doc
      - name: deploy2      
        run: cargo package
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features
      - run: |
           cargo publish --token ${{ secrets.API_KEY }}
      
















# name: Rust
# 'on':
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main
# jobs:
#   WindowBuild:
#     runs-on: 'windows-latest' 
#     strategy:
#       matrix:
#         rust:
#           - stable
#           - beta
#           - nightly
#     steps:
#       - uses: actions/checkout@v2
# #       - uses: Swatinem/rust-cache@v1
#       - uses: actions-rs/toolchain@v1
#         with:
#              toolchain: ${{ matrix.rust }}
#              components: 'rustfmt, clippy'
#              override: true 
# #       - uses: actions-rs/cargo@v1
# #         with:
# #              use-cross: true
#       - uses: actions/cache@v2
#         with:
#           path: |
#             ~/.cargo/bin/
#             ~/.cargo/registry/index/
#             ~/.cargo/registry/cache/
#             target/
#           key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
#           restore-keys: ${{ runner.os }}-cargo-
#       - run: |
#              rustup update
#              rustup component add clippy-preview
#              rustup component add rustfmt
#              cargo fmt --all -- --check
#              cargo clippy --all --tests -- --deny=warnings
#              set RUSTFLAGS="-D warnings"
#              cargo build --verbose
#              cargo test --verbose
#              cargo doc
#              cargo package       
#       - uses: actions-rs/cargo@v1
#         with:
#           command: build
#           args: --release --all-features
#       - run: |
#            cargo publish --token ${{ secrets.API_KEY }}
     
  
# #   ubuntu:
# #     runs-on: 'ubuntu-latest' 
# #     strategy:
# #       matrix:
# #         rust:
# #           - stable
# #           - beta
# #     steps:
# #       - uses: actions/checkout@v2
# #       - uses: Swatinem/rust-cache@v1
# #       - uses: actions-rs/toolchain@v1
# #         with:
# #              toolchain: ${{ matrix.rust }}
# #              components: 'rustfmt, clippy'
# #              override: true 
# #       - uses: actions-rs/cargo@v1
# #         with:
# #              use-cross: true
# #       - run: |
# #              rustup update
# #              rustup component add clippy-preview
# #              rustup component add rustfmt
# #              cargo fmt --all -- --check
# #              cargo clippy --all --tests -- --deny=warnings
# #              set RUSTFLAGS="-D warnings"
# #              cargo build --all-features
# #              cargo build --verbose
# #              cargo test --verbose
# #              cargo doc
# #              cargo package
# #       - uses: actions-rs/cargo@v1
# #         with:
# #           command: build
# #           args: --release --all-features
# #       - uses: katyo/publish-crates@v1
# #         with:
# #           registry-token: ${{ secrets.API_KEY }}   
# #   mac-os:
# #     runs-on: 'macOS-latest' 
# #     strategy:
# #       matrix:
# #         rust:
# #           - stable
# #           - beta
# #     steps:
# #       - uses: actions/checkout@v2
# #       - uses: Swatinem/rust-cache@v1
# #       - uses: actions-rs/toolchain@v1
# #         with:
# #              toolchain: ${{ matrix.rust }}
# #              components: 'rustfmt, clippy'
# #              override: true 
# #       - uses: actions-rs/cargo@v1
# #         with:
# #              use-cross: true
# #       - run: |
# #              rustup update
# #              rustup component add clippy-preview
# #              rustup component add rustfmt
# #              cargo fmt --all -- --check
# #              cargo clippy --all --tests -- --deny=warnings
# #              set RUSTFLAGS="-D warnings"
# #              cargo build --verbose
# #              cargo test --verbose
# #              cargo doc
# #              cargo package
# #       - uses: actions-rs/cargo@v1
# #         with:
# #           command: build
# #           args: --release --all-features
# # #       - run: |
# # #           cargo publish --token "$CRATES_IO_TOKEN"
